1. Task description
This challenge is to build a model to predict gender based on names.

Data:
A training dataset consists of names and gender.
A test dataset consists of names only.

Your job is to:
1) Extract features
2) build and train a machine learning model from scratch
3) use the trained model to predict the gender
4) submit your code

Criteria:
1) Prediction accuracy on test set (judge system will use the same training set to train your model and use a test set to evaluate your code and model).
2) The solution (including training and prediction) should finish in 10 minutes.

Training input file format as follow:
     John,male
     Lucy,female
     ...

Test set input file format as follow:
     John
     Lucy
     ...

The input of your program is 1 argument, the path of a test data set file.

The output is standard output print, the format of which is as same as training file.

Third-party package e.g. Python: (only packages listed here can be used)
     Numpy
NOTE: If you want to use C/C++ or Java for higher performance, and thus need to install 3rd party library, please let the contest commitee know, and the commitee will evaluate it to decide if it's allowed. If yes, the library will be installed on server.
Only lib for matrix calcluation can be allowed, the existing machine learning lib is forbiden.

Machine learning Models:
     Machine Learning models are unrestricted. E.g. Logistic Regression and Artificial Neural Network.

Training data file The full path of training data is fixed if you run it online, please don't change it.
     "/var/www/html/training_dataset.txt"
You can also download it from this link:
     http://10.182.198.199/training_dataset.txt


2. Feature extraction
feature extraction starts from an initial set of measured data and builds derived values (features) intended to be informative and non-redundant, facilitating the subsequent learning and generalization steps, and in some cases leading to better human interpretations.
Here the initial set of measured data is names consist of letters, we need to extract features in a format supported by machine learning algorithms.
We use X denote features and X = {x1, x2, ..., xn}, n denote the number of features, for examples, For example, we can extract features like blew:
x1 = 1 if 'a' appears in name, else 0
x2 = numbers of 'a' in name
if we have two names 'John' and 'Lucy', the features can extract as the table

names   x1=if 'c' appears   x2=numbers of 'h'   ...
John    0                   1                   ...
Lucy    1                   0                   ...


3. Model examples
1) Neural Network from scratch http://www.wildml.com/2015/09/implementing-a-neural-network-from-scratch/
2) Logistic Regression from scratch: https://medium.com/@martinpella/logistic-regression-from-scratch-in-python-124c5636b8ac


////////////////////?????////////////////////


1. ????
?????????????????/?????????????????

???
??????(?????)???
?????????

??????
1?????????
2??????????????????????????
3?????????
4???????

?????
1??????????????
2????????????????????10???????????

????????
John,male
Lucy,female
...

????????
John
Lucy
...

????????????????????????

???????????????????????

?????python?????
Numpy
??? ?????????????C/C++?Java?????????????????????????????????????????
?????????????????????????????????

???????
???????????????????????????

?????????????????????
"/var/www/html/training_dataset.txt"
????????
http://10.182.198.199/training_dataset.txt

2.????
?????X???? X = {x1, x2, ..., xn}? n?????? ???
x1 = 1 ????a??????????0
x2 = ‘a’ ?????????

? 'John','Lucy'????????????:
names x1=??????‘c’  x2=??‘h’????    ...
John    0                   1                   ...
Lucy    1                   0                   ...

3.???????
1) Neural Network from scratch http://www.wildml.com/2015/09/implementing-a-neural-network-from-scratch/
2) Logistic Regression from scratch: https://medium.com/@martinpella/logistic-regression-from-scratch-in-python-124c5636b8ac
